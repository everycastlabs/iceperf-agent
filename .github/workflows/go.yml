# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build and Test App

on:
  push:
    branches:
      - "main"
      - "add-updates"
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.x'

      - name: Install dependencies
        run: go get ./cmd/iceperf

      - name: Test
        run: go test -v ./acceptance-tests
        env:
          ENVIRONMENT: TEST
          METERED_USERNAME: ${{ secrets.METERED_USERNAME }}
          METERED_PASSWORD: ${{ secrets.METERED_PASSWORD }}
          METERED_API_KEY: ${{ secrets.METERED_API_KEY }}
          METERED_REQUEST_URL: ${{ secrets.METERED_REQUEST_URL }}
          TWILIO_HTTP_USERNAME: ${{ secrets.TWILIO_HTTP_USERNAME }}
          TWILIO_HTTP_PASSWORD: ${{ secrets.TWILIO_HTTP_PASSWORD  }}
          TWILIO_REQUEST_URL: ${{ secrets.TWILIO_REQUEST_URL  }}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID  }}
          XIRSYS_HTTP_USERNAME: ${{ secrets.XIRSYS_HTTP_USERNAME  }}
          XIRSYS_HTTP_PASSWORD: ${{ secrets.XIRSYS_HTTP_PASSWORD  }}
          XIRSYS_REQUEST_URL: ${{ secrets.XIRSYS_REQUEST_URL  }}
  build:
    name: Build
    needs:
      - test
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
    - uses: actions/checkout@v4

    # - name: Set up Go
    #   uses: actions/setup-go@v4
    #   with:
    #     go-version: '1.22.x'

    # - name: Install dependencies
    #   run: go get ./cmd/iceperf

    - uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        project_path: "./cmd/iceperf"

    # - name: Build
    #   run: go build -o ${{ matrix.binary-name }} ./cmd/iceperf

    # - name: Release
    #   uses: softprops/action-gh-release@v2
    #   if: startsWith(github.ref, 'refs/tags/')
    #   with:
    #     files: ${{ matrix.binary-name }}
